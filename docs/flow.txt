# Basic work flows for pacman project:

# prevent accidentally sourcing the commands in this file:
return

# connecting to UART
busybox microcom -s 115200 /dev/ttyUSB1
# (Use Ctrl-X to exit)

# building from repo:
git clone https://github.com/mulhearn/pacman.git
# or, with ssh:
git clone git@github.com:mulhearn/pacman.git
cd pacman
source /tools/Xilinx/Vivado/2020.2/settings64.sh
# create the project from tcl
vivado -mode batch -source vivado/tcl/create.tcl
# run systhesis, implementation, and write bit stream:
vivado -mode batch -source vivado/tcl/runsib.tcl

# run hello world demo:
xsct apps/hello/install.tcl
cd hello
xsct run.tcl

# install hello world to qspi flash demo (also shows creating BOOT.bin with bootgen)
xsct apps/flash/install.tcl
# you can now copy flash/BOOT.bin onto the BOOT partition of an SD card to boot hello world from SD card, and/or:
# write BOOT.bin to QSPI flash:
cd flash
source program.sh
# switch to QSPI boot mode (boots hello world)

# petalinux ramdisk (uses RAM for root fs)
source /tools/Xilinx/PetaLinux/2022.2/bin/settings.sh
cd petalinux
source scripts/create_ramdisk.sh
cd ramdisk
source ../scripts/config.sh
source ../scripts/build.sh
# source ../scripts/package.sh
cd images/linux
bootgen -arch zynq -image bootgen.bif -w -o BOOT.bin
ls -alh BOOT.BIN image.ub boot.scr



