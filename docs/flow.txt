# Basic work flows for pacman project:

# prevent accidentally sourcing the commands in this file:
return

# connecting to UART
busybox microcom -s 115200 /dev/ttyUSB1
# (Use Ctrl-X to exit)

# building from repo:
git clone https://github.com/mulhearn/pacman.git
# or, with ssh:
git clone git@github.com:mulhearn/pacman.git
cd pacman
source /tools/Xilinx/Vivado/2020.2/settings64.sh
# create the project from tcl
vivado -mode batch -source vivado/create.tcl
# run systhesis, implementation, and write bit stream:
vivado -mode batch -source vivado/runsib.tcl

# run hello world demo:
xsct apps/hello/install.tcl
cd hello
xsct run.tcl

# run hwcheck
xsct apps/hwcheck/install.tcl
cd hwcheck
xsct run.tcl

# write hello world to flash
# untested ... start with:
xsct apps/flash/install.tcl

# install various first stage boot loaders
xsct apps/fsbl/install.tcl

# petalinux ramdisk (uses RAM for root fs)
source /tools/Xilinx/PetaLinux/2022.2/bin/settings.sh
cd petalinux
source scripts/create_ramdisk.sh
cd ramdisk
source ../scripts/config.sh
source ../scripts/build.sh
source ../scripts/package.sh
cd images/linux
ls -alh BOOT.BIN image.ub










#xsct tcl/build_sw.tcl

# building petalinux (initramdisk version) for first time:
# !!! Make sure custom FSBL is uptodate via build_sw.tcl  !!!
source /tools/Xilinx/petalinux/2018.3/settings.sh
mv petalinux-initramdisk petalinux-initramdisk.old
./petalinux/initramdisk/scratch_build.sh
# check if the scratch build is out of date:
git diff --name-only petalinux-initramdisk/jtag_boot.sh petalinux-initramdisk
# if so, resolve first via "updating petalinux scratch build"

# to build
cd petalinux-initramdisk
./build.sh 
# with board in SD card mode, and no SD card inserted:
# to test new image over JTAG:
./jtag_boot.sh

